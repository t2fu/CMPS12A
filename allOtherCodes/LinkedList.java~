import java.util.*;
public class LinkedList{
  static Node head;
  int size;
  
   public static void main(String[] args){
   
 // the first item in the linked list
 LinkedList fibNums = new LinkedList();
 try{
 fibNums.push(1);
 fibNums.push(1);
 fibNums.push(2);
 fibNums.push(3);
 fibNums.push(5);
 fibNums.push(8);
 fibNums.push(13);
 fibNums.push(21);
 fibNums.push(34);
 fibNums.push(55);
 fibNums.push(89);
 fibNums.push(144);


 Node current=head;
 while(current!=null){
       System.out.println(current.data); 
       current=current.next; 
        
       
      }
 System.out.println(fibNums.find(3,head));
 System.out.println(fibNums.pop());
 System.out.println(fibNums.pop());
 System.out.println(fibNums.pop());
 System.out.println(fibNums.pop());
 }
 catch(NullPointerException e){
   
   
 }
 
 }
  
 
  
  public void push(int data){
    size++;
    Node current=head;
    
    if(head == null){
      head=new Node(data,null); 
    }
    else{
      while(current.next!=null){
        current=current.next;
        
      }
      current.next=new Node(data,null);
    }
 
  }  
  public Integer pop(){
    //Node current=head.next;
    int data=head.data;
  
   if(head == null){
     return null;
    }
     head = head.next;
     
    
    return data;
  }
  public void insert(int n,int d, Node a){
    if(a == null){
      a=new Node(d,null);
    }
    else{
      
      
    }

  }
  public int find(int n, Node a){
    Node temp = a.next;
    if(n == 0){
      return -1;
    }
    if (n > 1){
      return find(n-1,temp);
    }
    
    return a.data;
    
  }
  
}